name: Deploy Website
on:
  push:
    branches: main
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4

      - name: Cache dependencies
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: |
          npm ci

      - name: Lint code
        run: |
          npm run lint

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4

      - name: Cache dependencies
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: |
          npm ci

      - name: Test code
        continue-on-error: true
        id: test-code
        run: |
          npm run test

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: test.json

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4

      - name: Cache dependencies
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: |
          npm ci

      - name: Build website
        run: |
          npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files
      - name: output content
        run: |
          echo "Content of dist directory:"
          ls

      - name: Deploy
        run: |
          echo "Deploying website..."

  report:
    needs: [lint, deploy]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Output error message
        run: |
          echo "Something went wrong"
          echo "${{ toJSON(github) }}"
